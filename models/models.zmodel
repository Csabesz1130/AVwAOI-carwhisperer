enum UserStatus {
    INVITED
    VERIFIED
}

model User {
    id                     String                  @id @default(uuid())
    name                   String?
    email                  String?                 @unique
    pictureUrl             String?                 @default('https://i.imgur.com/ZdJSK3Y.jpeg')
    tokenInvitation        String?

    stripeCustomerId       String?

    status                 UserStatus              @default(VERIFIED)

    // this is the role of the user for the application
    globalRole             String                  @default('USER')
    password               String?                 @password @omit
    createdAt              DateTime                @default(now())
    updatedAt              DateTime                @updatedAt @default(now())

    organizationRoles      OrganizationRole[]

    pwaSubscriptions       PwaSubscription[]       @relation("user")

    userPreferences        UserPreference[]        @relation("user")
    questionnaireResponses QuestionnaireResponse[] @relation("user")
    userCars               UserCar[]               @relation("user")
    recommendations        Recommendation[]        @relation("user")
    deals                  Deal[]                  @relation("user")

    @@auth()
    @@allow("all", auth().id == this.id)
    @@allow('all', auth().globalRole == 'ADMIN')

    //we only allow that user to register if they don't create an admin role
    @@allow("create", globalRole != 'ADMIN')
    @@allow("read", true)
}

model Car {

    id              String           @id @default(uuid())
    make            String?
    model           String?
    year            Float?
    color           String?
    imageUrl        String?
    description     String?
    emissionsRating String?
    fuelEfficiency  String?
    ecoFeatures     String[]
    cargoSpace      Float?
    seatingCapacity Int?
    safetyRating    Float?
    maintenanceCost Float?
    engineType      String?
    horsepower      Int?
    acceleration    Float?
    topSpeed        Float?
    transmission    String?
    driveType       String?

    userCars        UserCar[]        @relation("car")
    recommendations Recommendation[] @relation("car")
    deals           Deal[]           @relation("car")
    createdAt       DateTime         @default(now())
    updatedAt       DateTime         @updatedAt @default(now())
    @@allow("all", true)
}

model UserPreference {

    id              String   @id @default(uuid())
    preferenceType  String?
    preferenceValue String?

    userId          String
    user            User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model QuestionnaireResponse {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userId    String
    responses Json     @default("{}")

    user      User     @relation(fields: [userId], references: [id], name: "user")

    @@allow("all", true)
}

model UserCar {

    id              String   @id @default(uuid())
    ownershipStatus String?
    purchaseDate    String?

    userId          String
    user            User?    @relation(fields: [userId], references: [id], name: "user")
    carId           String
    car             Car?     @relation(fields: [carId], references: [id], name: "car")

    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model Recommendation {

    id        String   @id @default(uuid())
    reason    String?

    userId    String
    user      User?    @relation(fields: [userId], references: [id], name: "user")
    carId     String
    car       Car?     @relation(fields: [carId], references: [id], name: "car")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model Deal {

    id          String   @id @default(uuid())
    dealPrice   String?
    dealDate    String?
    status      String?
    contractUrl String?

    userId      String
    user        User?    @relation(fields: [userId], references: [id], name: "user")
    carId       String
    car         Car?     @relation(fields: [carId], references: [id], name: "car")

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model Organization {
    id               String             @id @default(uuid())
    name             String
    pictureUrl       String?            @default('https://i.imgur.com/BgkFiid.jpeg')

    stripeCustomerId String?

    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt @default(now())
    roles            OrganizationRole[]

    @@allow('all', auth().globalRole == 'ADMIN')
    @@allow('all', roles?[user == auth() && name == 'owner'])
    @@allow('read', roles?[user == auth()])
}

model OrganizationRole {
    id             String       @id @default(uuid())
    name           String
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt @default(now())

    userId         String       @default(auth().id)
    user           User         @relation(fields: [userId], references: [id])
    organizationId String
    organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

    @@allow('all', auth().globalRole == 'ADMIN')
    @@allow('all', organization.roles?[user == auth() && name == 'owner'])
    @@allow('create', organization.roles?[user == auth()] && name != 'owner')
    @@allow('read', organization.roles?[user == auth()])
    @@allow('delete', auth() == user)
}

model PwaSubscription {
    id        String   @id @default(uuid())
    content   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())

    userId    String   @default(auth().id)
    user      User     @relation(fields: [userId], references: [id], name: 'user')

    @@allow("all", true)
}

model CarTechnology {
    id          String   @id @default(uuid())
    name        String
    description String
    imageUrl    String?
    howItWorks  String
    benefits    String[]
    drawbacks   String[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@allow("all", true)
}

